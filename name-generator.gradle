def String[] NOUNS = [
        "song",
        "suggestion",
        "carriage",
        "vacation",
        "debt",
        "downtown",
        "sofa",
        "country",
        "airport",
        "rainstorm",
        "deer",
        "shake",
        "death",
        "chickens",
        "vest",
        "ocean",
        "bed",
        "curtain",
        "edge",
        "badge",
        "boat",
        "gate",
        "eyes",
        "north",
        "humor",
        "river",
        "visitor",
        "tax",
        "leg",
        "sun",
        "hall",
        "blood",
        "produce",
        "lip",
        "friction",
        "advice",
        "hydrant",
        "credit",
        "dogs",
        "snake",
        "arithmetic",
        "throne",
        "detail",
        "loaf",
        "bee",
        "throat",
        "payment",
        "bulb",
        "achiever",
        "border",
];
def String[] ADJECTIVES = [
        "confused",
        "concerned",
        "jaded",
        "exclusive",
        "sloppy",
        "lyrical",
        "expensive",
        "political",
        "depressed",
        "furtive",
        "colorful",
        "dizzy",
        "abaft",
        "short",
        "aspiring",
        "vulgar",
        "neighborly",
        "tedious",
        "omniscient",
        "piquant",
        "unruly",
        "juicy",
        "aware",
        "teeny-tiny",
        "mixed",
        "shivering",
        "calculating",
        "hallowed",
        "tawdry",
        "arrogant",
        "mellow",
        "elderly",
        "foolish",
        "well-made",
        "fresh",
        "receptive",
        "divergent",
        "stimulating",
        "parsimonious",
        "drunk",
        "oceanic",
        "living",
        "unbecoming",
        "complex",
        "uneven",
        "joyous",
        "cute",
        "idiotic",
        "absurd",
        "adventurous",
]
task generateServiceNames << {
    Random rand = new Random()
    int max = Math.min(NOUNS.length, ADJECTIVES.length)
    int numToGenerate = 100
    def maps = []
    for (int i = 1; i <= numToGenerate; i++) {
        def name = "${ADJECTIVES[rand.nextInt(max)]}-${NOUNS[rand.nextInt(max)]}"
        while (maps.contains(name)) {
            name = "${ADJECTIVES[rand.nextInt(max)]}-${NOUNS[rand.nextInt(max)]}"
        }
        maps << name
        println name
    }
}
