{"version":3,"file":"bootstrap/grunt/bs-glyphicons-data-generator.js","names":[],"mappings":"","sources":["bootstrap/grunt/bs-glyphicons-data-generator.js"],"sourcesContent":["/*!\n * Bootstrap Grunt task for Glyphicons data generation\n * http://getbootstrap.com\n * Copyright 2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n */\n'use strict';\nvar fs = require('fs');\n\nmodule.exports = function generateGlyphiconsData(grunt) {\n  // Pass encoding, utf8, so `readFileSync` will return a string instead of a\n  // buffer\n  var glyphiconsFile = fs.readFileSync('less/glyphicons.less', 'utf8');\n  var glyphiconsLines = glyphiconsFile.split('\\n');\n\n  // Use any line that starts with \".glyphicon-\" and capture the class name\n  var iconClassName = /^\\.(glyphicon-[a-zA-Z0-9-]+)/;\n  var glyphiconsData = '# This file is generated via Grunt task. **Do not edit directly.**\\n' +\n                       '# See the \\'build-glyphicons-data\\' task in Gruntfile.js.\\n\\n';\n  var glyphiconsYml = 'docs/_data/glyphicons.yml';\n  for (var i = 0, len = glyphiconsLines.length; i < len; i++) {\n    var match = glyphiconsLines[i].match(iconClassName);\n\n    if (match !== null) {\n      glyphiconsData += '- ' + match[1] + '\\n';\n    }\n  }\n\n  // Create the `_data` directory if it doesn't already exist\n  if (!fs.existsSync('docs/_data')) {\n    fs.mkdirSync('docs/_data');\n  }\n\n  try {\n    fs.writeFileSync(glyphiconsYml, glyphiconsData);\n  }\n  catch (err) {\n    grunt.fail.warn(err);\n  }\n  grunt.log.writeln('File ' + glyphiconsYml.cyan + ' created.');\n};\n"],"sourceRoot":"/source/"}